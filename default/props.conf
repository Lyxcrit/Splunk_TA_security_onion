[zeek:json]
SHOULD_LINEMERGE = false
TRUNCATE = 0
TIME_PREFIX = \"ts\"\:
TIME_FORMAT = %s.%6N
TRANSFORMS-BroAutoTypeForJson = BroAutoTypeJSON

# This stanza is executing after of all source type based stanza and tsv/json (zeek(_|:)*) define pattern stanza.
# Stanza execution priority:
# 1) sourcetype based stanza ( zeek_* or zeek:*:json)
# 2) both data formate regex stanza [(?::){0}zeek(_|:)*])
# 3) json sourcetype stanza ([(?::){0}zeek:*:json])
[(?::){0}zeek:*:json]
KV_MODE = JSON
SHOULD_LINEMERGE = false
TRUNCATE = 0
EVENT_BREAKER_ENABLE = true
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N

###############
# CIM TAGGING #
###############
FIELDALIAS-dest0 = id.resp_h AS dest
FIELDALIAS-dest_ip0 = id.resp_h AS dest_ip
FIELDALIAS-src0 = id.orig_h AS src
FIELDALIAS-src_ip0 = id.orig_h AS src_ip
FIELDALIAS-src_port0 = id.orig_p AS src_port

[source::...zeek.*.log]
SHOULD_LINEMERGE = false
TRUNCATE = 0
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N
TRANSFORMS-BroAutoType = BroAutoType, TrashComments
INDEXED_EXTRACTIONS = TSV
FIELD_HEADER_REGEX = ^#fields\t(.*)
FIELD_DELIMITER = \t
FIELD_QUOTE = \t
EVENT_BREAKER_ENABLE = true

# index-time operations to dynamically extract fields based on the log
# header and rename the sourcetype (zeek_conn, zeek_http, zeek_smtp, etc).
[zeek]
SHOULD_LINEMERGE = false
TRUNCATE = 0
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N
TRANSFORMS-BroAutoType = BroAutoType, TrashComments
INDEXED_EXTRACTIONS = TSV
FIELD_HEADER_REGEX = ^#fields\t(.*)
FIELD_DELIMITER = \t
FIELD_QUOTE = \t
EVENT_BREAKER_ENABLE = true

# search-time operations to enrich zeek logs.
# Match all zeek_* sourcetypes.
# This stanza is executing after of all source type based stanza but before the json (zeek:*:json) pattern stanza.
# Stanza execution priority:
# 1) sourcetype based stanza ( zeek_* or zeek:*:json)
# 2) both data formate regex stanza [(?::){0}zeek(_|:)*])
# 3) json sourcetype stanza ([(?::){0}zeek:*:json])
[(?::){0}zeek(_|:)*]
SHOULD_LINEMERGE = false
TRUNCATE = 0
EVENT_BREAKER_ENABLE = true
MAX_TIMESTAMP_LOOKAHEAD = 20
TIME_FORMAT = %s.%6N

LOOKUP-LookupTCFlag    = LookupTCFlag TC OUTPUT flag
#LOOKUP-LookupTransport = zeek_protocol_lookup sourcetype OUTPUT transport
LOOKUP-VendorInfo      = zeek_vendor_info_lookup sourcetype OUTPUT vendor,product,product as vendor_product
LOOKUP-NoticeType      = zeek_note_alert_type note OUTPUT type

#REPORT-bytes_from_zeek = bytes_from_resp_size_int, bytes_from_file_size_int
REPORT-get_bytes_for_zeek_conn   = bytes_in_int, bytes_out_int
#REPORT-ssl_issuer_cn = ssl_issuer_cn

#EVAL-url = coalesce(query,uri)


###############
# CIM TAGGING #
###############
EVAL-sensor_name = coalesce(system_name, host, "unknown")
EVAL-is_zeekadcast = if(src in("0.0.0.0", "255.255.255.255") OR dest in("255.255.255.255", "0.0.0.0"),"true","false")
EVAL-direction = case(local_orig="true" AND local_resp="true", "internal", local_orig="true" and local_resp="false", "outbound", local_orig="false" and local_resp="false", "external", local_orig="false" and local_resp="true", "inbound", 1=1, "unknown")
EVAL-is_src_internal_ip=if(cidrmatch("10.0.0.0/8",src) OR cidrmatch("172.16.0.0/12",src) OR cidrmatch("192.168.0.0/16", src), "true", "false")
EVAL-is_dest_internal_ip=if(cidrmatch("10.0.0.0/8",dest) OR cidrmatch("172.16.0.0/12",dest) OR cidrmatch("192.168.0.0/16", dest), "true", "false")
EVAL-id_resp_h = dest
EVAL-id_resp_p = dest_port
EVAL-id_orig_h = src
EVAL-id_orig_p = src_port
EVAL-bytes = if(isnum(bytes),bytes,bytes_in+bytes_out)
EVAL-packets = if(isnum(packets),packets,packets_in+packets_out)
EVAL-duration = if(isnum(duration),duration,null())
#FIELDALIAS-arg =
#FIELDALIAS-client_header_names
#FIELDALIAS-conn_state
#FIELDALIAS-content_len = content_len AS message_size
#FIELDALIAS-date =
FIELDALIAS-dest = id_resp_h AS dest
FIELDALIAS-dest_ip = id_resp_h AS dest_ip
EVAL-dest_port = coalesce('id.resp_p',id_resp_p)
#FIELDALIAS-dest_port = id.resp_p AS dest_port
#FIELDALIAS-duration
EVAL-dvc = coalesce(extracted_host, host, hostname)
#FIELDALIAS-excerpt =
#FIELDALIAS-extraction_file =
#FIELDALIAS-file_size  =
#FIELDALIAS-first_received =
#FIELDALIAS-from =
#FIELDALIAS-helo =
#FIELDALIAS-history
EVAL-dest_host = coalesce(dest, 'id.resp_h', id.resp_h, "unknown")
#FIELDALIAS-info_code
#FIELDALIAS-info_msg
#FIELDALIAS-in_reply_to =
#FIELDALIAS-last_reply =
#FIELDALIAS-local_orig
FIELDALIAS-mailfrom = mailfrom AS src_user
#FIELDALIAS-md5 =
#FIELDALIAS-mime_desc =
#FIELDALIAS-mime_type =
#FIELDALIAS-missed_bytes
#FIELDALIAS-orig_ip_bytes
#FIELDALIAS-password =
#FIELDALIAS-path =
FIELDALIAS-proxied = proxied AS product
#FIELDALIAS-reply_code =
#FIELDALIAS-reply_msg =
#FIELDALIAS-reply_to =
#FIELDALIAS-resp_ip_bytes
#FIELDALIAS-second_received =
#FIELDALIAS-server_header_names
FIELDALIAS-src = id_orig_h AS src
FIELDALIAS-src_ip = id_orig_h AS src_ip
FIELDALIAS-src_port = id_orig_p AS src_port
#FIELDALIAS-status_msg
#FIELDALIAS-subject = subject AS message_subject
#FIELDALIAS-tags =
#FIELDALIAS-TC  = TC AS flag
#FIELDALIAS-to =
#FIELDALIAS-trans_depth =
#FIELDALIAS-ts =
#FIELDALIAS-tunnel_parents
FIELDALIAS-uid = uid AS flow_id
#FIELDALIAS-user =
#FIELDALIAS-x_originating_ip =
FIELDALIAS-src_mac = mac AS src_mac

# Alerts
#FIELDALIAS-body_msg = msg AS body

EVAL-vendor_action = split(actions, ",")
#EVAL-severity = if(isnotnull(body),"unknown", severity)

[zeek_http]
FIELDALIAS-resp_fuids = resp_fuids{} AS resp_fuids
FIELDALIAS-mime_types = resp_mime_types{} AS resp_mime_types
FIELDALIAS-tags = tags{} AS tags
FIELDALIAS-orig_fuids = orig_fuids{} AS orig_fuids
FIELDALIAS-orig_mime_types = orig_mime_types{} AS orig_mime_types
EXTRACT-uri_query = \?(?<uri_query>.*) in uri
FIELDALIAS-uri_path = uri AS uri_path
EVAL-url = if(isnotnull(coalesce('id.resp_p',id_resp_p)),coalesce(extracted_host,spath(_raw,"host"), hostname).":".coalesce('id.resp_p',id_resp_p).uri, coalesce(extracted_host,spath(_raw,"host"), hostname).uri)
FIELDALIAS-request_body_len = request_body_len AS bytes_out
FIELDALIAS-response_body_len = response_body_len AS bytes_in
FIELDALIAS-resp_mime_types = resp_mime_types{} AS http_content_type
FIELDALIAS-method = method AS http_method
FIELDALIAS-referrer = referrer AS http_referrer
FIELDALIAS-status_code = status_code AS status
FIELDALIAS-user_agent = user_agent AS http_user_agent
FIELDALIAS-username = username as user
EVAL-http_user_agent_length = len(http_user_agent)
FIELDALIAS-site = host_header AS site
FIELDALIAS-http_user_agent = user_agent AS http_user_agent
FIELDALIAS-http_referrer = referrer AS http_referrer
FIELDALIAS-http_method = method AS http_method
EXTRACT-host_header = \"host\":\"(?<host_header>[^\"]*)

[zeek_smtp]
LOOKUP-protocol_for_zeek_smtp = zeek_protocol_lookup sourcetype OUTPUT protocol
FIELDALIAS-orig_src = id_orig_h AS orig_src
FIELDALIAS-recipient = rcptto{} AS recipient
FIELDALIAS-return_addr = reply_to AS return_addr
FIELDALIAS-orig_recipient = rcptto{} AS orig_recipient
FIELDALIAS-mailfrom = mailfrom as src_user
FIELDALIAS-to = to{} AS to
FIELDALIAS-path = path{} AS path
FIELDALIAS-fuids = fuids{} AS fuids
FIELDALIAS-rcptto = rcptto{} AS rcptto
FIELDALIAS-msg_id = msg_id AS message_id

[zeek_notice]
#EVAL-action = split(actions, ",")
FIELDALIAS-dest = dst AS dest
FIELDALIAS-dvc = host AS dvc
EVAL-ids_type = "network"
FIELDALIAS-category = note AS category
FIELDALIAS-id = uid AS id

#FIELDALIAS-action = actions{} AS action
#FIELDALIAS-actions = actions{} AS actions

[zeek_conn]
EVAL-bytes    = if(isnum(bytes),bytes,bytes_in+bytes_out)
FIELDALIAS-orig_bytes = orig_bytes AS bytes_out
FIELDALIAS-orig_pkts = orig_pkts AS packets_out
FIELDALIAS-proto = proto AS transport
FIELDALIAS-resp_bytes = resp_bytes AS bytes_in
FIELDALIAS-resp_pkts = resp_pkts AS packets_in
FIELDALIAS-tunnel_parents = tunnel_parents{} AS tunnel_parents
FIELDALIAS-tcp_flag = conn_state AS tcp_flag
FIELDALIAS-dest_mac = resp_l2_addr AS dest_mac
FIELDALIAS-service= service AS app
LOOKUP-LookupAction    = zeek_action_lookup status OUTPUT action
LOOKUP-LookupConnState  = LookupConnState conn_state OUTPUT conn_state_meaning, action
EVAL-packets = packets_in + packets_out
EVAL-duration = if(isnum(duration),duration,null())


[zeek_dns]
EVAL-message_type = if(isnotnull(rcode),"RESPONSE","QUERY")
FIELDALIAS-reply_code_id = rcode AS reply_code_id
FIELDALIAS-reply_code = rcode_name ASNEW reply_code
FIELDALIAS-answers = answers{} AS answers
FIELDALIAS-TTLs = TTLs{} AS TTLs
FIELDALIAS-query_type = qtype_name AS query_type
FIELDALIAS-proto = proto AS transport
FIELDALIAS-rcode_name = rcode_name AS status
EVAL-answer = mvindex(answers, 0)
#FIELDALIAS-qclass_name = qclass_name AS record_class
FIELDALIAS-qtype_name  = qtype_name  AS record_type
FIELDALIAS-record_type = qtype_name AS record_type

[zeek_dhcp]
LOOKUP-LookupTransport = zeek_protocol_lookup sourcetype OUTPUT transport as signature
FIELDALIAS-lease_duration = lease_time AS lease_duration

[zeek_files]
FIELDALIAS-analyzers = analyzers{} AS analyzers
FIELDALIAS-rx_hosts = rx_hosts{} AS rx_hosts
FIELDALIAS-tx_hosts = tx_hosts{} AS tx_hosts
FIELDALIAS-mime_type_attachment = mime_type AS attachment_type
FIELDALIAS-filename = filename AS file_name
FIELDALIAS-total_bytes = total_bytes AS file_size
#FIELDALIAS-conn_uids = conn_uids{} AS flow_id
FIELDALIAS-src_host = tx_hosts{} AS src_host
FIELDALIAS-dest_host = rx_hosts{} AS dest_host
FIELDALIAS-bytes = seen_bytes AS bytes
FIELDALIAS-object = filename AS object
EXTRACT-source = \"source\":\"(?<transport>\w+)\"

[zeek_services]
FIELDALIAS-service = service{} AS service

[zeek_software]
FIELDALIAS-host = host_header AS src_host
FIELDALIAS-version = version.major AS version_major
FIELDALIAS-version1 = version.minor AS version_minor
FIELDALIAS-version2 = version.minor2 AS version_minor2
EVAL-version = if(isnotnull(version_major),version_major,"").if(isnotnull(version_minor),".".version_minor,"").if(isnotnull(version_minor2),".".version_minor2,"")
EVAL-tx_host = src_host

[zeek_ssl]
FIELDALIAS-cert_chain = cert_chain_fuids{} AS cert_chain_fuids
FIELDALIAS-client_cert_chain = client_cert_chain_fuids{} AS client_cert_chain_fuids
FIELDALIAS-ssl_issuer = issuer AS ssl_issuer
FIELDALIAS-ssl_subject = subject AS ssl_subject
FIELDALIAS-ssl_subject_common_name = server_name AS ssl_subject_common_name
FIELDALIAS-ssl_cipher = cipher AS ssl_cipher

[zeek_x509]
FIELDALIAS-ssl_end_time = certificate.not_valid_after AS ssl_end_time
FIELDALIAS-ssl_issuer = certificate.issuer AS ssl_issuer
FIELDALIAS-ssl_publickey_algorithm = certificate.key_alg AS ssl_publickey_algorithm
FIELDALIAS-ssl_serial = certificate.serial AS ssl_serial
FIELDALIAS-ssl_signature_algorithm = certificate.sig_alg AS ssl_signature_algorithm
FIELDALIAS-ssl_start_time = certificate.not_valid_before AS ssl_start_time
FIELDALIAS-ssl_subject = certificate.subject AS ssl_subject
EVAL-ssl_validity_window = round(strptime(ssl_end_time,"%Y-%m-%dT%H:%M:%S.%6NZ") - strptime(ssl_start_time,"%Y-%m-%dT%H:%M:%S.%6NZ"),0)
FIELDALIAS-ssl_version = certificate.version AS ssl_version
EXTRACT-ssl_extracts = emailAddress=(?<ssl_issuer_email>\w+\@\w+\.\w+),
EXTRACT-ssl_org = ,O=(?<ssl_issuer_organization>[A-Za-z0-9 \.\'\,\-\x5C]+),

[zeek:dhcp:json]
LOOKUP-LookupTransport = zeek_protocol_lookup sourcetype OUTPUT transport as signature
FIELDALIAS-lease_duration = lease_time AS lease_duration

[zeek:conn:json]
EVAL-bytes    = if(isnum(bytes),bytes,bytes_in+bytes_out)
FIELDALIAS-orig_bytes = orig_bytes AS bytes_out
FIELDALIAS-orig_pkts = orig_pkts AS packets_out
FIELDALIAS-proto = proto AS transport
FIELDALIAS-resp_bytes = resp_bytes AS bytes_in
FIELDALIAS-resp_pkts = resp_pkts AS packets_in
FIELDALIAS-tunnel_parents = tunnel_parents{} AS tunnel_parents
FIELDALIAS-tcp_flag = conn_state AS tcp_flag
FIELDALIAS-dest_mac = resp_l2_addr AS dest_mac
FIELDALIAS-service= service AS app
LOOKUP-LookupAction    = zeek_action_lookup status OUTPUT action
LOOKUP-LookupConnState  = LookupConnState conn_state OUTPUT conn_state_meaning, action
EVAL-packets = packets_in + packets_out
EVAL-duration = if(isnum(duration),duration,null())

[zeek:dns:json]
EVAL-message_type = if(isnotnull(rcode),"RESPONSE","QUERY")
FIELDALIAS-reply_code_id = rcode AS reply_code_id
FIELDALIAS-reply_code = rcode_name ASNEW reply_code
FIELDALIAS-answers = answers{} AS answers
FIELDALIAS-TTLs = TTLs{} AS TTLs
FIELDALIAS-query_type = qtype_name AS query_type
FIELDALIAS-proto = proto AS transport
FIELDALIAS-rcode_name = rcode_name AS status
EVAL-answer = mvindex(answers, 0)
#FIELDALIAS-qclass_name = qclass_name AS record_class
FIELDALIAS-qtype_name  = qtype_name  AS record_type

[zeek:files:json]
FIELDALIAS-analyzers = analyzers{} AS analyzers
FIELDALIAS-rx_hosts = rx_hosts{} AS rx_hosts
FIELDALIAS-tx_hosts = tx_hosts{} AS tx_hosts
FIELDALIAS-mime_type_attachment = mime_type AS attachment_type
FIELDALIAS-filename = filename AS file_name
FIELDALIAS-total_bytes = total_bytes AS file_size
#FIELDALIAS-conn_uids = 'conn_uids{}' AS flow_id
FIELDALIAS-src_host = tx_hosts{} AS src_host
FIELDALIAS-dest_host = rx_hosts{} AS dest_host
FIELDALIAS-bytes = seen_bytes AS bytes
FIELDALIAS-object = filename AS object
EXTRACT-source = \"source\":\"(?<transport>\w+)\"

[zeek:http:json]
FIELDALIAS-resp_fuids = resp_fuids{} AS resp_fuids
FIELDALIAS-mime_types = resp_mime_types{} AS resp_mime_types
FIELDALIAS-tags = tags{} AS tags
FIELDALIAS-orig_fuids = orig_fuids{} AS orig_fuids
FIELDALIAS-orig_mime_types = orig_mime_types{} AS orig_mime_types
EXTRACT-uri_query = \?(?<uri_query>.*) in uri
FIELDALIAS-uri_path = uri AS uri_path
EVAL-url = if(isnotnull(coalesce('id.resp_p',id_resp_p)),coalesce(extracted_host,spath(_raw,"host"), hostname).":".coalesce('id.resp_p',id_resp_p).uri, coalesce(extracted_host,spath(_raw,"host"), hostname).uri)
FIELDALIAS-request_body_len = request_body_len AS bytes_out
FIELDALIAS-response_body_len = response_body_len AS bytes_in
FIELDALIAS-resp_mime_types = resp_mime_types{} AS http_content_type
FIELDALIAS-method = method AS http_method
FIELDALIAS-referrer = referrer AS http_referrer
FIELDALIAS-status_code = status_code AS status
FIELDALIAS-user_agent = user_agent AS http_user_agent
FIELDALIAS-username = username as user
EVAL-http_user_agent_length = len(http_user_agent)
FIELDALIAS-site = host_header AS site
FIELDALIAS-http_user_agent = user_agent AS http_user_agent
FIELDALIAS-http_referrer = referrer AS http_referrer
FIELDALIAS-http_method = method AS http_method
EXTRACT-host_header = \"host\":\"(?<host_header>[^\"]*)

[zeek:notice:json]
#FIELDALIAS-action = actions{} AS action
FIELDALIAS-dest = dst AS dest
FIELDALIAS-dvc = host AS dvc
EVAL-ids_type = "network"
FIELDALIAS-category = note AS category
#FIELDALIAS-actions = actions{} AS actions
FIELDALIAS-id = uid AS id

[zeek:services:json]
FIELDALIAS-service = service{} AS service

[zeek:ssl:json]
FIELDALIAS-cert_chain = cert_chain_fuids{} AS cert_chain_fuids
FIELDALIAS-client_cert_chain = client_cert_chain_fuids{} AS client_cert_chain_fuids
FIELDALIAS-ssl_issuer = issuer AS ssl_issuer
FIELDALIAS-ssl_subject = subject AS ssl_subject
FIELDALIAS-ssl_subject_common_name = server_name AS ssl_subject_common_name
FIELDALIAS-ssl_cipher = cipher AS ssl_cipher

[zeek:smtp:json]
LOOKUP-protocol_for_zeek_smtp = zeek_protocol_lookup sourcetype OUTPUT protocol
#FIELDALIAS-emailAddress = emailAddress as sender
#FIELDALIAS-sender = from AS sender
FIELDALIAS-mailfrom = mailfrom as src_user
FIELDALIAS-to = to{} AS to
FIELDALIAS-path = path{} AS path
FIELDALIAS-fuids = fuids{} AS fuids
FIELDALIAS-rcptto = rcptto{} AS rcptto
FIELDALIAS-orig_src = id.orig_h AS orig_src
FIELDALIAS-recipient = rcptto{} AS recipient
FIELDALIAS-return_addr = reply_to AS return_addr
FIELDALIAS-orig_recipient = rcptto{} AS orig_recipient
FIELDALIAS-msg_id = msg_id AS message_id

[zeek:software:json]
FIELDALIAS-host = host_header AS src_host
FIELDALIAS-version = version.major AS version_major
FIELDALIAS-version1 = version.minor AS version_minor
FIELDALIAS-version2 = version.minor2 AS version_minor2
EVAL-version = if(isnotnull(version_major),version_major,"").if(isnotnull(version_minor),".".version_minor,"").if(isnotnull(version_minor2),".".version_minor2,"")
EVAL-tx_host = src_host

[zeek:x509:json]
FIELDALIAS-ssl_end_time = certificate.not_valid_after AS ssl_end_time
FIELDALIAS-ssl_issuer = certificate.issuer AS ssl_issuer
FIELDALIAS-ssl_publickey_algorithm = certificate.key_alg AS ssl_publickey_algorithm
FIELDALIAS-ssl_serial = certificate.serial AS ssl_serial
FIELDALIAS-ssl_signature_algorithm = certificate.sig_alg AS ssl_signature_algorithm
FIELDALIAS-ssl_start_time = certificate.not_valid_before AS ssl_start_time
FIELDALIAS-ssl_subject = certificate.subject AS ssl_subject
EVAL-ssl_validity_window = round(strptime(ssl_end_time,"%Y-%m-%dT%H:%M:%S.%6NZ") - strptime(ssl_start_time,"%Y-%m-%dT%H:%M:%S.%6NZ"),0)
FIELDALIAS-ssl_version = certificate.version AS ssl_version
EXTRACT-ssl_extracts = emailAddress=(?<ssl_issuer_email>\w+\@\w+\.\w+),
EXTRACT-ssl_org = ,O=(?<ssl_issuer_organization>[A-Za-z0-9 \.\'\,\-\x5C]+),

[zeek_filter]
rename = zeek_packet_filter

[zeek_policy]
rename = zeek_notice_policy

[zeek_entities]
rename = zeek_smtp_entities

[zeek_conn_long]
FIELDALIAS-proto = proto AS transport

[zeek:conn_long:json]
FIELDALIAS-proto = proto AS transport

[suricata]
SHOULD_LINEMERGE = true
TIME_PREFIX=timestamp":
BREAK_ONLY_BEFORE = ^{
KV_MODE = json
FIELDALIAS-suricata_global = proto AS transport src_ip AS src dest_ip AS dest
##Vendor Fields
FIELDALIAS-suricata_vendor_id = alert.signature_id AS vendor_sid alert.gid AS vendor_gid alert.rev AS vendor_rev
EVAL-suricata_signature_id = vendor_gid.":".vendor_sid.":".vendor_rev

##FIELD ALIAS FOR IDS
FIELDALIAS-suricata_ids = alert.action AS action alert.gid AS alert_gid alert.rev AS alert_rev alert.severity AS severity_id alert.category AS category alert.signature AS signature host AS dvc

##FIELD ALIAS FOR WEB
FIELDALIAS-suricata_web = http.hostname AS dest http.url AS url http.http_user_agent AS http_user_agent http.http_content_type AS http_content_type http.cookie AS cookie http.length AS bytes http.protocol AS http_protocol http.status AS status http.http_method AS http_method http.http_refer AS http_referrer

##FIELD ALIAS FOR DNS
FIELDALIAS-suricata_dns = dns.id AS transaction_id dns.rcode AS reply_code dns.rdata AS answer dns.rdata AS dest dns.rrname AS query dns.ttl AS ttl dns.tx_id AS tx_id dns.type AS message_type

##FIELD ALIAS FOR SSL
FIELDALIAS-suricata_ssl = tls.fingerprint AS ssl_publickey tls.issuerdn AS ssl_issuer_common_name tls.sni AS ssl_server_name_indication tls.subject AS ssl_subject_common_name tls.version AS ssl_version
EXTRACT-ssl_serial = subject.+?serialNumber=(?<ssl_serial>[\w\d\s.]+)
EXTRACT-ssl_subject_email = subject.+?emailAddress=(?<ssl_subject_email>[\w\d\s@.]+)
EXTRACT-ssl_subject_locality = subject.+?L=(?<ssl_subject_locality>[\w\s.]+)
EXTRACT-ssl_subject_organization = subject.+?O=(?<ssl_subject_organization>[\w\d\s\.-]+)
EXTRACT-ssl_issuer_email = issuerdn.+?emailAddress=(?<ssl_issuer_email>[\w\d\s@.]+)
EXTRACT-ssl_issuer_locality = issuerdn.+?L=(?<ssl_issuer_locality>[\w\s.]+)
EXTRACT-ssl_issuer_organization = issuerdn.+?O=(?<ssl_issuer_organization>[\w\d\s\.-]+)

##FIELD ALIAS FOR SSH
FIELDALIAS-suricata_ssh = ssh.client.proto_version AS ssh_client_version ssh.client.software_version AS ssh_client_software ssh.server.proto_version AS ssh_server_version ssh.server.software_version AS ssh_server_software

##FIELD ALIAS FOR FLOW
FIELDALIAS-suricata_flow = app_proto AS app flow.age AS duration flow.bytes_toclient AS bytes_in flow.bytes_toserver AS bytes_out flow.pkts_toclient AS packets_in flow.pkts_toserver AS packets_out flow.reason AS reason flow.start AS starttime flow.end AS endtime flow.state as state tcp.ack AS tcp_ack tcp.cwr AS tcp_cwr tcp.ecn AS tcp_ecn tcp.fin AS tcp_fin tcp.psh AS tcp_psh tcp.rst AS tcp_rst tcp.state AS tcp_state tcp.syn AS tcp_syn tcp.tcp_flags AS tcp_flag_hex tcp.tcp_flags_tc AS tcp_flag_hex_to_client tcp.tcp_flags_ts AS tcp_flag_hex_to_server

##FIELD ALIAS FOR FILES
FIELDALIAS-suricata_files = fileinfo.filename AS filename fileinfo.size AS file_size fileinfo.state AS file_state fileinfo.stored AS file_stored fileinfo.tx_id AS file_tx_id fileinfo.rx_id AS file_rx_id

##FIELD ALIAS FOR STATS
FIELDALIAS-suricata_stats = stats.capture.kernel_drops AS capture_kernel_drops stats.capture.kernel_packets AS capture_kernel_packets stats.decoder.avg_pkt_size AS decoder_avg_pkt_size stats.decoder.bytes AS decoder_bytes stats.decoder.erspan AS decoder_erspan stats.decoder.ethernet AS decoder_ethernet stats.decoder.gre AS decoder_gre stats.decoder.icmpv4 AS decoder_icmpv4 stats.decoder.icmpv6 AS decoer_icmpv6 stats.decoder.invalid AS decoder_invalid stats.decoder.ipraw.invalid_ip_version AS decoder_ipraw_invalid_ip_version stats.decoder.ipv4 AS decoder_ipv4 stats.decoder.ipv4_in_ipv6 AS decoder_ipv4_in_ipv6 stats.decoder.ipv6 AS decoder_ipv6 stats.decoder.ipv6_in_ipv6 AS decoder_ipv6_in_ipv6 stats.decoder.ltnull.pkt_too_small AS decoder_ltnull_pkt_too_small stats.decoder.ltnull.unsupported_type AS decoder_ltnull_unspported_type stats.decoder.max_pkt_size AS decoder_max_pkt_size stats.decoder.mpls AS decoder_mpls stats.decoder.null AS decoder_null stats.decoder.pkts AS decoder_pkts stats.decoder.ppp AS decoder_ppp stats.decoder.pppoe AS decoder_pppoe stats.decoder.raw AS decoder_raw stats.decoder.sctp AS decoder_sctp stats.decoder.sll AS decoder_ssl stats.decoder.tcp AS decoder_tcp stats.decoder.teredo AS decoder_teredo stats.decoder.udp AS decoder_udp stats.decoder.vlan AS decoder_vlan stats.decoder.vlan_qinq AS decoder_vlan_qinq stats.defrag.ipv4.fragments AS defrag_ipv4_fragments stats.defrag.ipv4.reassembled AS defrag_ipv4_reassembled stats.defrag.ipv4.timeouts AS defrag_ipv4_timeouts stats.defrag.ipv6.fragments AS defrag_ipv6_fragments stats.defrag.ipv6.reassembled AS defrag_ipv6_reassembled stats.defrag.ipv6.timeouts AS dfrag_ipv6_timeouts stats.defrag.max_frag_hits AS defrag_max_frag_hits stats.detect.alert AS detect_alert stats.dns.memcap_global AS dns_memcap_global stats.dns.memcap_state AS dns_memcap_state stats.dns.memuse AS dns_memuse stats.flow.emerg_mode_entered AS flow_emerg_mode_entered stats.flow.emerg_mode_over AS flow_emerg_mode_over stats.flow.memcap AS flow_memcap stats.flow.memuse AS flow_memuse stats.flow.spare AS flow_spare stats.flow.tcp_reuse AS flow_tcp_reuse stats.flow_mgr.closed_pruned AS flow_mgr_closed_pruned stats.flow_mgr.est_pruned AS flow_mgr_est_pruned stats.flow_mgr.new_pruned AS flow_mgr_new_pruned stats.http.memcap AS http_memcap stats.http.memuse AS http_memuse stats.stream.3whs_ack_in_wrong_dir AS stream_3whs_ack_in_wrong_dir stats.stream.3whs_async_wrong_seq AS stream_3whs_async_wrong_seq stats.stream.3whs_right_seq_wrong_ack_evasion AS stream_3whs_right_seq_wrong_ack_evasion stats.tcp.invalid_checksum AS tcp_invalid_checksum stats.tcp.memuse AS tcp_memuse stats.tcp.no_flow AS tcp_no_flow stats.tcp.pseudo AS tcp_pseudo stats.tcp.pseudo_failed AS tcp_pseudo_failed stats.tcp.reassembly_gap AS tcp_reassembly_gap stats.tcp.reassembly_memuse AS tcp_reassembly_memuse stats.tcp.rst AS tcp_rst stats.tcp.segment_memcap_drop AS tcp_segment_memcap_drop stats.tcp.sessions AS tcp_sessions stats.tcp.ssn_memcap_drop AS tcp_ssn_memcap_drop stats.tcp.stream_depth_reached AS tcp_stream_depth_reached stats.tcp.syn AS tcp_syn stats.tcp.synack AS tcp_synack stats.uptime AS uptime


##LOOKUPS FOR ENTERPRISE SECURITY/COMMON INFORMATION MODEL
LOOKUP-severity_for_suricata = suricata_severity severity_id OUTPUT severity
LOOKUP-vendor_info_for_suricata = suricata_vendor_info sourcetype OUTPUT vendor,product,ids_type

##LOOKUP FOR TCP_FLOW
LOOKUP-tcpflag_for_suricata = suricata_tcp_flag tcp_flag_hex OUTPUT tcp_flag
LOOKUP-tcpflag_tc_for_suricata = suricata_tcp_flag tcp_flag_hex AS tcp_flag_hex_to_client OUTPUT tcp_flag AS tcp_flag_to_client
LOOKUP-tcpflag_ts_for_suricata = suricata_tcp_flag tcp_flag_hex AS tcp_flag_hex_to_server OUTPUT tcp_flag AS tcp_flag_to_server